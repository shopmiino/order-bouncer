version: '3.8'

networks:
  monitoring:
    driver: bridge

services:
  order-bouncer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-bouncer-container
    restart: on-failure
    ports:
      - "5000:8080"
    env_file:
      - .env.production
    environment:
      - Shopify__WebhookSecret=${SHOPIFY_WEBHOOKSECRET}
      - ASPNET_PORT=8080
    depends_on:
      - loki
      - prometheus
      - grafana
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    user: "1000:1000"
    volumes:
      - ./config/loki-config.yml:/etc/loki/loki-config.yml
      - ./loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    environment:
      - GF_SECURITY_ADMIN_USER=${GP_ADMIN_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GP_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring

volumes:
  grafana-data:
    driver: local
  loki-data:
    driver: local
